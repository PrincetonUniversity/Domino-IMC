% bits
function [low, high] = getBSRRange(bsr_index, is_long_bsr)
    % Handle NaN or invalid cases
    if isnan(bsr_index)
        low = 0;
        high = 0;
        return;
    end
    
    if is_long_bsr
        % 8-bit BSR table for long BSR
        if bsr_index < 0 || bsr_index > 226
            low = 0;
            high = 0;
            return;
        end
        
        % Define the 8-bit BSR ranges table
        bsr_ranges = [
            0, 0;      % 0
            0, 10;     % 1
            10, 11;    % 2
            11, 12;    % 3
            12, 13;    % 4
            13, 14;    % 5
            14, 15;    % 6
            15, 16;    % 7
            16, 17;    % 8
            17, 18;    % 9
            18, 19;    % 10
            19, 20;    % 11
            20, 22;    % 12
            22, 23;    % 13
            23, 25;    % 14
            25, 26;    % 15
            26, 28;    % 16
            28, 30;    % 17
            30, 32;    % 18
            32, 34;    % 19
            34, 36;    % 20
            36, 38;    % 21
            38, 40;    % 22
            40, 43;    % 23
            43, 46;    % 24
            46, 49;    % 25
            49, 52;    % 26
            52, 55;    % 27
            55, 59;    % 28
            59, 62;    % 29
            62, 66;    % 30
            66, 71;    % 31
            71, 75;    % 32
            75, 80;    % 33
            80, 85;    % 34
            85, 91;    % 35
            91, 97;    % 36
            97, 103;   % 37
            103, 110;  % 38
            110, 117;  % 39
            117, 124;  % 40
            124, 132;  % 41
            132, 141;  % 42
            141, 150;  % 43
            150, 160;  % 44
            160, 170;  % 45
            170, 181;  % 46
            181, 193;  % 47
            193, 205;  % 48
            205, 218;  % 49
            218, 233;  % 50
            233, 248;  % 51
            248, 264;  % 52
            264, 281;  % 53
            281, 299;  % 54
            299, 318;  % 55
            318, 339;  % 56
            339, 361;  % 57
            361, 384;  % 58
            384, 409;  % 59
            409, 436;  % 60
            436, 464;  % 61
            464, 494;  % 62
            494, 526;  % 63
            526, 560;  % 64
            560, 597;  % 65
            597, 635;  % 66
            635, 677;  % 67
            677, 720;  % 68
            720, 767;  % 69
            767, 817;  % 70
            817, 870;  % 71
            870, 926;  % 72
            926, 987;  % 73
            987, 1051; % 74
            1051, 1119;% 75
            1119, 1191;% 76
            1191, 1269;% 77
            1269, 1351;% 78
            1351, 1439;% 79
            1439, 1532;% 80
            1532, 1631;% 81
            1631, 1737;% 82
            1737, 1850;% 83
            1850, 1970;% 84
            1970, 2098;% 85
            2098, 2234;% 86
            2234, 2379;% 87
            2379, 2533;% 88
            2533, 2698;% 89
            2698, 2873;% 90
            2873, 3059;% 91
            3059, 3258;% 92
            3258, 3469;% 93
            3469, 3694;% 94
            3694, 3934;% 95
            3934, 4189;% 96
            4189, 4461;% 97
            4461, 4751;% 98
            4751, 5059;% 99
            5059, 5387;% 100
            5387, 5737;% 101
            5737, 6109;% 102
            6109, 6506;% 103
            6506, 6928;% 104
            6928, 7378;% 105
            7378, 7857;% 106
            7857, 8367;% 107
            8367, 8910;% 108
            8910, 9488;% 109
            9488, 10104;% 110
            10104, 10760;% 111
            10760, 11458;% 112
            11458, 12202;% 113
            12202, 12994;% 114
            12994, 13838;% 115
            13838, 14736;% 116
            14736, 15692;% 117
            15692, 16711;% 118
            16711, 17795;% 119
            17795, 18951;% 120
            18951, 20181;% 121
            20181, 21491;% 122
            21491, 22885;% 123
            22885, 24371;% 124
            24371, 25963;% 125
            25963, 27638;% 126
            27638, 29431;% 127
            29431, 31342;% 128
            31342, 33376;% 129
            33376, 35543;% 130
            35543, 37850;% 131
            37850, 40307;% 132
            40307, 42923;% 133
            42923, 45709;% 134
            45709, 48676;% 135
            48676, 51836;% 136
            51836, 55200;% 137
            55200, 58784;% 138
            58784, 62599;% 139
            62599, 66663;% 140
            66663, 70990;% 141
            70990, 75598;% 142
            75598, 80505;% 143
            80505, 85730;% 144
            85730, 91295;% 145
            91295, 97221;% 146
            97221, 103532;% 147
            103532, 110252;% 148
            110252, 117409;% 149
            117409, 125030;% 150
            125030, 133146;% 151
            133146, 141789;% 152
            141789, 150992;% 153
            150992, 160793;% 154
            160793, 171231;% 155
            171231, 182345;% 156
            182345, 194182;% 157
            194182, 206786;% 158
            206786, 220209;% 159
            220209, 234498;% 160
            234498, 249725;% 161
            249725, 265935;% 162
            265935, 283197;% 163
            283197, 301579;% 164
            301579, 321155;% 165
            321155, 342002;% 166
            342002, 364202;% 167
            364202, 387842;% 168
            387842, 413018;% 169
            413018, 439827;% 170
            439827, 468377;% 171
            468377, 498780;% 172
            498780, 531156;% 173
            531156, 565634;% 174
            565634, 602350;% 175
            602350, 641449;% 176
            641449, 683087;% 177
            683087, 727427;% 178
            727427, 774645;% 179
            774645, 824928;% 180
            824928, 878475;% 181
            878475, 935498;% 182
            935498, 996222;% 183
            996222, 1060888;% 184
            1060888, 1129752;% 185
            1129752, 1203085;% 186
            1203085, 1281179;% 187
            1281179, 1364342;% 188
            1364342, 1452903;% 189
            1452903, 1547213;% 190
            1547213, 1647644;% 191
            1647644, 1754595;% 192
            1754595, 1868488;% 193
            1868488, 1989774;% 194
            1989774, 2118933;% 195
            2118933, 2256475;% 196
            2256475, 2402946;% 197
            2402946, 2558924;% 198
            2558924, 2725027;% 199
            2725027, 2901912;% 200
            2901912, 3090279;% 201
            3090279, 3290873;% 202
            3290873, 3504487;% 203
            3504487, 3731968;% 204
            3731968, 3974215;% 205
            3974215, 4232186;% 206
            4232186, 4506902;% 207
            4506902, 4799451;% 208
            4799451, 5110889;% 209
            5110889, 5442750;% 210
            5442750, 5796046;% 211
            5796046, 6172275;% 212
            6172275, 6572925;% 213
            6572925, 6999582;% 214
            6999582, 7453933;% 215
            7453933, 7937777;% 216
            7937777, 8453028;% 217
            8453028, 9001725;% 218
            9001725, 9586039;% 219
            9586039, 10208280;% 220
            10208280, 10870913;% 221
            10870913, 11576557;% 222
            11576557, 12328006;% 223
            12328006, 13128233;% 224
            13128233, 13980403;% 225
            13980403, 14887889;% 226
            14887889, 15854280;% 227
            15854280, 16883401;% 228
            16883401, 17979324;% 229
            17979324, 19146385;% 230
            19146385, 20389201;% 231
            20389201, 21712690;% 232
            21712690, 23122088;% 233
            23122088, 24622972;% 234
            24622972, 26221280;% 235
            26221280, 27923336;% 236
            27923336, 29735875;% 237
            29735875, 31666069;% 238
            31666069, 33721553;% 239
            33721553, 35910462;% 240
            35910462, 38241455;% 241
            38241455, 40723756;% 242
            40723756, 43367187;% 243
            43367187, 46182206;% 244
            46182206, 49179951;% 245
            49179951, 52372284;% 246
            52372284, 55771835;% 247
            55771835, 59392055;% 248
            59392055, 63247269;% 249
            63247269, 67352729;% 250
            67352729, 71724679;% 251
            71724679, 76380419;% 252
            76380419, 81338368;% 253
            81338368, 86338368;% 254
        ];
    else
        % 5-bit BSR table for short BSR
        if bsr_index < 0 || bsr_index > 31
            low = 0;
            high = 0;
            return;
        end
        
        % Define 5-bit BSR ranges
        bsr_ranges = [
            0,    0;      % 0
            0,    10;     % 1
            10,   14;     % 2
            14,   20;     % 3
            20,   28;     % 4
            28,   38;     % 5
            38,   53;     % 6
            53,   74;     % 7
            74,   102;    % 8
            102,  142;    % 9
            142,  198;    % 10
            198,  276;    % 11
            276,  384;    % 12
            384,  535;    % 13
            535,  745;    % 14
            745,  1038;   % 15
            1038, 1446;   % 16
            1446, 2014;   % 17
            2014, 2806;   % 18
            2806, 3909;   % 19
            3909, 5446;   % 20
            5446, 7587;   % 21
            7587, 10570;  % 22
            10570, 14726; % 23
            14726, 20516; % 24
            20516, 28581; % 25
            28581, 39818; % 26
            39818, 55474; % 27
            55474, 77284; % 28
            77284, 107669;% 29
            107669,150000;% 30
            150000,200000 % 31
        ];
    end
    
    % Index is 0-based in the table, but MATLAB is 1-based
    bsr_index = bsr_index + 1;
    
    % Convert to bits (multiply by 8)
    low = bsr_ranges(bsr_index, 1) * 8;
    high = bsr_ranges(bsr_index, 2) * 8;
end